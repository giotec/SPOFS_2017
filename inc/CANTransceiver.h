#pragma once

#include "CANPacket.h"
#include "LPC17xx.h"

class CANTransceiver
{
public:
	enum BitRate {BITRATE100K16MHZ = 0x001C0009, BITRATE125K16MHZ = 0x001C0007, BITRATE250K16MHZ = 0x001C0003, BITRATE500K16MHZ = 0x001C0001, BITRATE1000K16MHZ = 0x001C0000,
				  BITRATE100K24MHZ = 0x001C000E, BITRATE125K24MHZ = 0x001C000B, BITRATE250K24MHZ = 0x001C0005, BITRATE500K24MHZ = 0x001C0002, BITRATE1000K24MHZ = 0x00090001,
				  BITRATE100K48MHZ = 0x001C001D, BITRATE125K48MHZ = 0x001C0017, BITRATE250K48MHZ = 0x001C000B, BITRATE500K48MHZ = 0x001C0005, BITRATE1000K48MHZ = 0x001C0002,
				  BITRATE100K60MHZ = 0x00090031, BITRATE125K60MHZ = 0x00090027, BITRATE250K60MHZ = 0x00090013, BITRATE500K60MHZ = 0x00090009, BITRATE1000K60MHZ = 0x00090004,
				  BITRATE62_5K15MHZ= 0x00070017, BITRATE100K15MHZ = 0x0007000E, BITRATE125K15MHZ = 0x0007000B, BITRATE250K15MHZ = 0x00070005, BITRATE500K15MHZ  = 0x00070002,
				  BITRATE125K30MHZ = 0x00070017, BITRATE200K30MHZ = 0x0007000E, BITRATE250K30MHZ = 0x0007000B, BITRATE500K30MHZ = 0x00070005, BITRATE1000K30MHZ = 0x00070002,
				  BITRATE100K28_8MHZ=0x00090017, BITRATE125K18MHZ = 0x001C0008, BITRATE125K12_5MHZ=0x00070009, BITRATE250K12_5MHZ=0x00070004};

	CANTransceiver(int Interface, BitRate _BTR);
	~CANTransceiver();

	int Send(CANPacket PktOut);
	CANPacket Receive();

	uint32_t getUnsentCount() const { return _UnsentCount; }
	uint32_t getSentCount() const { return _TxCount; }
	uint32_t getReceivedCount() const { return _RxCount; }

private:
	int Init(int Interface, uint32_t _BTR);
	
	LPC_CAN_TypeDef *_Interface;
	uint32_t _BTR;
	uint32_t _UnsentCount;
	uint32_t _RxCount;
	uint32_t _TxCount;
};

